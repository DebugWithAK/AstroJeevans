{"ast":null,"code":"import { firebase, auth, db } from \"../config/firebase\";\n\nfunction updateUser(_ref) {\n  var email = _ref.email,\n      name = _ref.name,\n      surname = _ref.surname,\n      phoneNumber = _ref.phoneNumber,\n      photo = _ref.photo,\n      finalEvent = _ref.finalEvent;\n  var currentUser = auth.currentUser.uid;\n\n  if (photo) {\n    return firebase.storage().ref(\"images/\" + currentUser + ((photo === null || photo === void 0 ? void 0 : photo.name) || \"0\")).put(photo).then(function (doc) {\n      doc.ref.getDownloadURL().then(function (url) {\n        db.collection(\"Users\").doc(currentUser).update({\n          name: name,\n          surname: surname,\n          email: email,\n          phoneNumber: phoneNumber || \"\",\n          photoUrl: url\n        })[\"catch\"](function (e) {\n          return console.log(e);\n        })[\"finally\"](function () {\n          return finalEvent();\n        });\n      });\n    })[\"catch\"](function (e) {\n      return console.log(e);\n    });\n  }\n\n  return db.collection(\"Users\").doc(currentUser).update({\n    name: name,\n    surname: surname,\n    email: email,\n    phoneNumber: phoneNumber || \"\"\n  });\n}\n\nfunction updatePassword(_ref2) {\n  var currentPassword = _ref2.currentPassword,\n      newPassword = _ref2.newPassword;\n  var currentUser = auth.currentUser;\n  var credential = firebase.auth.EmailAuthProvider.credential(firebase.auth().currentUser.email, currentPassword);\n\n  var update = function update() {\n    return currentUser.updatePassword(newPassword).then(function () {// Update successful.\n    })[\"catch\"](function (error) {// An error happened.\n    });\n  };\n\n  var reauth = function reauth() {\n    return currentUser.reauthenticateWithCredential(credential);\n  };\n\n  return {\n    reauth: reauth,\n    update: update\n  };\n}\n\nexport { updateUser, updatePassword };","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/ASTRO/firebase/update-user.js"],"names":["firebase","auth","db","updateUser","email","name","surname","phoneNumber","photo","finalEvent","currentUser","uid","storage","ref","put","then","doc","getDownloadURL","url","collection","update","photoUrl","e","console","log","updatePassword","currentPassword","newPassword","credential","EmailAuthProvider","error","reauth","reauthenticateWithCredential"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,EAAzB,QAAmC,oBAAnC;;AAEA,SAASC,UAAT,OAA8E;AAAA,MAAxDC,KAAwD,QAAxDA,KAAwD;AAAA,MAAjDC,IAAiD,QAAjDA,IAAiD;AAAA,MAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5E,MAAMC,WAAW,GAAGT,IAAI,CAACS,WAAL,CAAiBC,GAArC;;AAEA,MAAIH,KAAJ,EAAW;AACT,WAAOR,QAAQ,CACZY,OADI,GAEJC,GAFI,CAEA,YAAYH,WAAZ,IAA2B,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEH,IAAP,KAAe,GAA1C,CAFA,EAGJS,GAHI,CAGAN,KAHA,EAIJO,IAJI,CAIC,UAACC,GAAD,EAAS;AACbA,MAAAA,GAAG,CAACH,GAAJ,CAAQI,cAAR,GAAyBF,IAAzB,CAA8B,UAACG,GAAD,EAAS;AACrChB,QAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EACGH,GADH,CACON,WADP,EAEGU,MAFH,CAEU;AACNf,UAAAA,IAAI,EAAJA,IADM;AAENC,UAAAA,OAAO,EAAPA,OAFM;AAGNF,UAAAA,KAAK,EAALA,KAHM;AAING,UAAAA,WAAW,EAAEA,WAAW,IAAI,EAJtB;AAKNc,UAAAA,QAAQ,EAAEH;AALJ,SAFV,WASS,UAACI,CAAD;AAAA,iBAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,SATT,aAUW;AAAA,iBAAMb,UAAU,EAAhB;AAAA,SAVX;AAWD,OAZD;AAaD,KAlBI,WAmBE,UAACa,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KAnBF,CAAP;AAoBD;;AAED,SAAOpB,EAAE,CACNiB,UADI,CACO,OADP,EAEJH,GAFI,CAEAN,WAFA,EAGJU,MAHI,CAGG;AACNf,IAAAA,IAAI,EAAJA,IADM;AAENC,IAAAA,OAAO,EAAPA,OAFM;AAGNF,IAAAA,KAAK,EAALA,KAHM;AAING,IAAAA,WAAW,EAAEA,WAAW,IAAI;AAJtB,GAHH,CAAP;AASD;;AAED,SAASkB,cAAT,QAA0D;AAAA,MAAhCC,eAAgC,SAAhCA,eAAgC;AAAA,MAAfC,WAAe,SAAfA,WAAe;AACxD,MAAMjB,WAAW,GAAGT,IAAI,CAACS,WAAzB;AAEA,MAAMkB,UAAU,GAAG5B,QAAQ,CAACC,IAAT,CAAc4B,iBAAd,CAAgCD,UAAhC,CACjB5B,QAAQ,CAACC,IAAT,GAAgBS,WAAhB,CAA4BN,KADX,EAEjBsB,eAFiB,CAAnB;;AAKA,MAAMN,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WAAOV,WAAW,CACfe,cADI,CACWE,WADX,EAEJZ,IAFI,CAEC,YAAY,CAChB;AACD,KAJI,WAKE,UAAUe,KAAV,EAAiB,CACtB;AACD,KAPI,CAAP;AAQD,GATD;;AAWA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WAAOrB,WAAW,CAACsB,4BAAZ,CAAyCJ,UAAzC,CAAP;AACD,GAFD;;AAIA,SAAO;AACLG,IAAAA,MAAM,EAANA,MADK;AAELX,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAED,SAASjB,UAAT,EAAqBsB,cAArB","sourcesContent":["import { firebase, auth, db } from \"../config/firebase\";\n\nfunction updateUser({ email, name, surname, phoneNumber, photo, finalEvent }) {\n  const currentUser = auth.currentUser.uid;\n\n  if (photo) {\n    return firebase\n      .storage()\n      .ref(\"images/\" + currentUser + (photo?.name || \"0\"))\n      .put(photo)\n      .then((doc) => {\n        doc.ref.getDownloadURL().then((url) => {\n          db.collection(\"Users\")\n            .doc(currentUser)\n            .update({\n              name,\n              surname,\n              email,\n              phoneNumber: phoneNumber || \"\",\n              photoUrl: url,\n            })\n            .catch((e) => console.log(e))\n            .finally(() => finalEvent());\n        });\n      })\n      .catch((e) => console.log(e));\n  }\n\n  return db\n    .collection(\"Users\")\n    .doc(currentUser)\n    .update({\n      name,\n      surname,\n      email,\n      phoneNumber: phoneNumber || \"\",\n    });\n}\n\nfunction updatePassword({ currentPassword, newPassword }) {\n  const currentUser = auth.currentUser;\n\n  const credential = firebase.auth.EmailAuthProvider.credential(\n    firebase.auth().currentUser.email,\n    currentPassword\n  );\n\n  const update = () => {\n    return currentUser\n      .updatePassword(newPassword)\n      .then(function () {\n        // Update successful.\n      })\n      .catch(function (error) {\n        // An error happened.\n      });\n  };\n\n  const reauth = () => {\n    return currentUser.reauthenticateWithCredential(credential);\n  };\n\n  return {\n    reauth,\n    update,\n  };\n}\n\nexport { updateUser, updatePassword };\n"]},"metadata":{},"sourceType":"module"}